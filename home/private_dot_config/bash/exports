#!/usr/bin/env bash
# -*- mode: bash; -*-

export ALTERNATE_EDITOR=""
export EDITOR="emacsclient -t"
export VISUAL="emacsclient -c -a emacs"
export DOOMDIR="${HOME}/.config/doom"
export GNUPGHOME="${HOME}/.config/gnupg"
export STARSHIP_CONFIG="${HOME}/.config/starship/starship.toml"
export ZDOTDIR="${HOME}/.config/zsh"
export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1"

# Use bat preview if it is installed
if [ -x $(which bat) ]
then
    export FZF_DEFAULT_OPTS='--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1 --preview "bat --color=always --style=numbers --line-range=:500 {}"'
fi

# My repositories
export REPODIR="$HOME/repos"
if [[ ! -d "$REPODIR" ]]
then
    mkdir -m 0755 "$REPODIR"
fi

# GnuPG stuff
export GPG_TTY=$(tty)

# http://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console
# http://linux-sxs.org/housekeeping/lscolors.html
export TERM=xterm-256color
#export CLICOLOR=1
##export LSCOLORS='ExCxxxDxBxxxxxxxxxxxxx' # used by ls(1)
export LS_COLORS='di=1;34:fi=0:ln=32:pi=33:so=0:bd=0:cd=0:or=0:mi=0:ex=1;31' # used by tree(1)

# Use custom directory for less history
export LESSHISTFILE="${HOME}/.cache/custom/lesshistory"

# less colors for man pages
#export LESS_TERMCAP_mb=$'\E[0;103m' # begin blinking
#export LESS_TERMCAP_md=$'\E[38;5;203m' # begin bold
#export LESS_TERMCAP_me=$'\E[0m' # end mode
#export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
#export LESS_TERMCAP_so=$'\E[01;44;33m' # begin standout-mode - info box
#export LESS_TERMCAP_ue=$'\E[0m' # end underline
#export LESS_TERMCAP_us=$'\E[38;5;227m' # begin underline
#export LESS_TERMCAP_mr=$(tput rev)
#export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# set PATH so it includes user's private bin if it exists
[ -d "$HOME/bin" ] && export PATH="$PATH:${HOME}/bin"

# Add local path to MAN
[ -d "${HOME}/.local/share/man" ] && export MANPATH="$MANPATH:${HOME}/.local/share/man"

# Local go
[ -d "$HOME/go/bin" ] && export PATH="$PATH:$HOME/go/bin"
export GOPATH="$HOME/go"

# Local binaries
[ -d "$HOME/.local/bin" ] && export PATH="$HOME/.local/bin:$PATH"

# Git stuff, from git-prompt and git-completion
# https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM=auto
export GIT_PS1_SHOWCOLORHINTS=true
#export GIT_PS1_HIDE_IF_PWD_IGNORED

# Source git prompt and completions
if [[ ! -z "${ZSH_VERSION}" ]]
then
    [ -f "${HOME}/.config/zsh/git-completion.zsh" ] && source "${HOME}/.config/zsh/git-completion.zsh"
    [ -f "${HOME}/.config/ludus/zsh.completion" ] && "${HOME}/.config/ludus/zsh.completion"
else
    [ -f "${HOME}/.config/bash/git-completion.bash" ] && source "${HOME}/.config/bash/git-completion.bash"
    [ -f "${HOME}/.config/ludus/bash.completion" ] && "${HOME}/.config/ludus/bash.completion"
fi
[ -f "${HOME}/.config/bash/git-prompt.sh" ] && source "${HOME}/.config/bash/git-prompt.sh"

# Overrides PS1
if [ ${TERM} = "dumb" ]
then
    PROMPT_COMMAND='$ '
else
    PROMPT_COMMAND='__git_ps1 "\[\033[01;34m\]\u@\h:\w\[\033[00m\]" "\[\033[01;34m\]\n\$\[\033[00m\] "'
fi

# Set specific stuff for WSL1&2
if [[ -n ${WSL_DISTRO_NAME} || -x /bin/wslpath ]]
then
    # For displaying stuff with WSL
    if [[ -n ${PULSE_SERVER} ]]
    then
        # WSLg in Windows 11
        export DISPLAY=":0"

    elif [[ -n ${WSL_INTEROP} ]]
    then
        #WSL2
        export DISPLAY="$(awk '/nameserver/ {print $2}' /etc/resolv.conf):0.0"

    else
        #WSL1
        export DISPLAY=:0.0

        # Docker on WSL
        export DOCKER_HOST=tcp://localhost:2375

        export LIBGL_ALWAYS_INDIRECT=1
        export GDK_DPI_SCALING=1.50

        # Set this to WSL for local use
        export DISTRO=WSL
    fi

    # Use npiperelay for SSH
    if [[ -n ${WSL_AUTH_SOCK} ]]
    then
        # Route SSH Agent Forwarding to Windows Host's ssh-agent
        export SSH_AUTH_SOCK=$HOME/.ssh/agent.sock
        ss -a | grep -q $SSH_AUTH_SOCK
        if [ $? -ne 0 ]; then
            rm -f $SSH_AUTH_SOCK
            (setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork &) > /dev/null 2>&1
        fi
    else
        export SSH_AUTH_SOCK="/run/user/$(id -u)/gnupg/S.gpg-agent.ssh"
    fi
fi

#  Remove duplicates from the PATH
PATH=$(printf "$PATH"|sed -E 's/(:){1,}/\n/g'|sed -E 's/^$//g'|awk '!a[$0]++'|tr '\n' ':')
export PATH
