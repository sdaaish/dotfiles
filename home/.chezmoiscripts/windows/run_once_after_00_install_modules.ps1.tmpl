{{ if eq .chezmoi.os "windows" -}}

# Test for privilege
$wid = [System.Security.Principal.WindowsIdentity]::GetCurrent()
$prp = New-Object System.Security.Principal.WindowsPrincipal($wid)
$adm = [System.Security.Principal.WindowsBuiltInRole]::Administrator

"Installing Modules, this will take a while. Hang on...."

# Test and install if administrator
if (-not ($prp.IsInRole($adm))) {
    throw "You need to run this as administrator."
}

try {
    Get-PackageProvider -Name NuGet -ListAvailable -ErrorAction Stop| Out-Null
}
catch {
    Install-PackageProvider -Name NuGet -Scope CurrentUser -Force -ForceBootStrap
}

try {
    Get-PackageSource -Name Nuget.org -ErrorAction Stop | Out-Null
}
catch {
    Register-PackageSource -Name Nuget.org -Location https://www.nuget.org/api/v2 -Provider NuGet -Trusted
}

Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
$modules = Get-Module -ListAvailable

if (($modules|Where-Object Name -match PowerShellGet|Select-Object -First 1).Version -lt [version]"2.2.5"){
    Install-Module -Name PowerShellGet -Scope AllUsers -Repository PSGallery -MinimumVersion 2.2.5 -Force
}

if (($modules|Where-Object Name -match PSReadLine|Select-Object -First 1).Version -lt [version]"2.4.0"){
    # Start as new process to get the latest Powershellget module loaded
    Start-Process powershell.exe -Argumentlist '-NoProfile -Command "Import-Module PowerShellget;Install-Module -Name PSReadLine -Scope AllUsers -AllowPrerelease -AllowClobber -Force"' -Wait
}

if (-not ("Microsoft.Winget.Client" -in $modules.name)){
    Install-Module -Name Microsoft.Winget.Client -Scope AllUsers -Repository PSGallery -Force
}

if (-not ("Microsoft.PowerShell.PSResourceGet" -in $modules.name)){
    Install-Module -Name Microsoft.PowerShell.PSResourceGet -Scope AllUsers -Repository PSGallery -Force
}

Import-Module Microsoft.PowerShell.PSResourceGet -Force | Out-Null
Set-PSResourceRepository -Name PSGallery -Trusted -Priority 40

# Register my repository for PowerShellGet
$RepoSource = @{
    Name = "AzurePowershellModules"
    SourceLocation = "https://pkgs.dev.azure.com/sdaaish/PSModules/_packaging/AzurePSModuleRepo/nuget/v2"
    ScriptSourceLocation = "https://pkgs.dev.azure.com/sdaaish/PSModules/_packaging/AzurePSModuleRepo/nuget/v2"
    InstallationPolicy = "Trusted"
}
try { Get-PSRepository -Name AzurePowershellModules -ErrorAction Stop | Out-Null}
catch { Register-PSRepository @RepoSource -ErrorAction Ignore }

# Register the repository for Microsoft.PowerShell.PSResourceGet
# This supports version 3
$RepoSource = @{
    Name = "AzurePowershellModules"
    Uri = "https://pkgs.dev.azure.com/sdaaish/PSModules/_packaging/AzurePSModuleRepo/nuget/v3/index.json"
    Trusted = $true
    Priority = 60
}
try { Get-PSResourceRepository -Name AzurePowershellModules -ErrorAction Stop | Out-Null}
catch { Register-PSResourceRepository @RepoSource -ErrorAction Ignore }

{{ end }}
