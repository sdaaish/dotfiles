{{ if eq .chezmoi.os "windows"}}

# Load function and update PATHS
{{- template "refreshpath.ps1" -}}

# Install scoop user packages
Import-Module Microsoft.PowerShell.Utility

$ErrorActionPreference = "Stop"
try {
    Get-Command scoop
}
catch {
    Write-Verbose "Scoop not installed, installing."
    # Run scoop as Admin even if the shell is elevated
    Invoke-Expression "& {$(Invoke-RestMethod -Uri https://get.scoop.sh)} -RunAsAdmin"
}

try {
    Get-Command git.exe
}
catch {
    throw "Git not installed"
}

try {
    Get-Command 7z.exe
}
catch {
    throw "7-Zip not installed"
}

# Reload PATH environment
refreshpath

# Update repository
scoop config use_external_7zip $true
scoop update --quiet

#  Get installed packages
$config = scoop.ps1 export|ConvertFrom-Json
$installed = ($config.apps|Where-Object info -notmatch global|Where-Object info -notmatch failed).name
$buckets = $config.buckets.name

if (-not ("extras" -in $buckets)) {
    scoop bucket add extras
}

if (-not ("nerd-fonts" -in $buckets)) {
    scoop bucket add nerd-fonts
}

# Install these packages
$packages = @(
    "aspell"
    "dasel"
    "sudo"
    "sysinternals"
    "xsv"
    "zstd"
)

# Install user mode packages
Write-Verbose "Installing user packages"
foreach ($pkg in $packages){
    if ($pkg -in $installed) {
        "Already installed: {0}" -f $pkg
    }
    else {
        "Installing: {0}" -f $pkg
        scoop install $pkg
    }
}

{{ end }}
