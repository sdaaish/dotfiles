{{ if eq .chezmoi.os "windows"}}

Function refreshenv {
    $paths = @(
				([System.Environment]::GetEnvironmentVariable("Path", "Machine") -split ([io.path]::PathSeparator))
				([System.Environment]::GetEnvironmentVariable("Path", "User") -split ([io.path]::PathSeparator))
    )
    $env:path = ($paths | Select-Object -Unique) -join ([io.path]::PathSeparator)
}

refreshenv
# Install scoop user packages
Import-Module Microsoft.PowerShell.Utility

$ErrorActionPreference = "Stop"
try {
    Get-Command scoop
}
catch {
    Write-Verbose "Scoop not installed, installing."
    Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
}

try {
    Get-Command git.exe
}
catch {
    throw "Git not installed"
}

try {
  Get-Command 7z.exe
}
catch {
  throw "7-Zip not installed"
}

refreshenv

# Update repository
scoop config use_external_7zip $true
scoop update --quiet

#  Get installed packages
$config = scoop.ps1 export|ConvertFrom-Json
$installed = ($config.apps|Where-Object info -notmatch global|Where-Object info -notmatch failed).name
$buckets = $config.buckets.name

if (-not ("extras" -in $buckets)) {
    scoop bucket add extras
}

if (-not ("nerd-fonts" -in $buckets)) {
    scoop bucket add nerd-fonts
}

# Install these packages
$packages = @(
    "aspell"
    "dasel"
    "sudo"
    "sysinternals"
    "xsv"
    "zstd"
)

# Install user mode packages
Write-Verbose "Installing user packages"
foreach ($pkg in $packages){
    if ($pkg -in $installed) {
        "Already installed: {0}" -f $pkg
    }
    else {
        "Installing: {0}" -f $pkg
        scoop install $pkg
    }
}

{{ end }}
