# Install scoop packages

{{ if eq .chezmoi.os "windows"}}

$DATE = Get-Date -Format "yyyyMMddTHHmmss"

if (-not (Get-Command scoop)) {
    Write-Verbose "Scoop not installed, installing."
    Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
}
else {
    # Update repository
    scoop update --quiet
}

#  Get installed packages
$config = scoop.ps1 export|convertfrom-json
$installed = $config.apps.name
$buckets = $config.buckets.name

if (-not ("extras" -in $buckets)) {
    scoop bucket add extras
}

if (-not ("nerd-fonts" -in $buckets)) {
    scoop bucket add nerd-fonts
}

# Install these packages
$packages = @(
    "aspell"
    "gcc"
    "sudo"
    "sysinternals"
    "xsv"
    "zstd"
)
$globalPackages = @(
    "AnonymousPro-NF"
    "CodeNewRoman-NF"
    "DejaVuSansMono-NF"
    "Delugia-Mono-Nerd-Font-complete"
    "Delugia-Nerd-Font-complete"
    "FiraCode-NF"
    "FiraMono-NF"
    "RobotoMono-NF"
    "SourceCodePro-NF"
    "Terminus-NF"
    "Ubuntu-NF"
)

# Install user mode packages
Write-Verbose "Installing user packages"
foreach ($pkg in $packages){
    if ($pkg -in $installed) {
        "Already installed: {0}" -f $pkg
    }
    else {
        "Installing: {0}" -f $pkg
        scoop install $pkg --no-update-scoop
    }
}

# Test for privilege
$wid = [System.Security.Principal.WindowsIdentity]::GetCurrent()
$prp = New-Object System.Security.Principal.WindowsPrincipal($wid)
$adm = [System.Security.Principal.WindowsBuiltInRole]::Administrator

# Test and install if administrator
if ($prp.IsInRole($adm)) {
    # Install Global packages as administrator
    Write-Verbose "Installing Global packages"
    foreach ($pkg in $globalPackages){
        if ($pkg -in $installed) {
            "Already installed: {0}" -f $pkg
        }
        else {
            "Installing: {0}" -f $pkg
            scoop install $pkg --no-update-scoop
        }
    }
}
else {
    throw "You need to run this as administrator."
}

{{ end }}
